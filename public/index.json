[{"authors":["admin"],"categories":null,"content":"Hello! I am Ruiqi Sun and I just graduated with an MS in Statistics at American University. For my master\u0026rsquo;s thesis, I developed statistical procedures to study the meiotic behavior of polyploid organisms (such as blueberries and potatoes) using next-generation sequencing data. I also had a research assistantship where I developed statistical models to predict enrollment behaviors of potential AU students based on financial aid allocations. Before coming to AU, I received a BS in Statistics from Chongqing University, a selective university in China. For my bachelor\u0026rsquo;s thesis, I developed regression models for predicting real estate prices. I am fluent in both Mandarin and English, and in my free time, I like to watch movies and go hiking.\nThis website contains some of my work, a list of my skills and relevant coursework, and some other information about me!\n","date":1597363200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1597528849,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/ruiqi-sun/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/ruiqi-sun/","section":"authors","summary":"Hello! I am Ruiqi Sun and I just graduated with an MS in Statistics at American University. For my master\u0026rsquo;s thesis, I developed statistical procedures to study the meiotic behavior of polyploid organisms (such as blueberries and potatoes) using next-generation sequencing data.","tags":null,"title":"Ruiqi Sun","type":"authors"},{"authors":["吳恩達"],"categories":null,"content":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"bb560906b6a99893cc21387348c0b074","permalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"吳恩達","type":"authors"},{"authors":["Ruiqi Sun","Shijin Gai","Xiaolin Wu"],"categories":["R","Shiny app"],"content":"\r\rWe are analyzing Stop Data Report from Metropolitan Police Department. We visualized the data and made it easy to understand for readers to absorb information. The data we use is Stop data from July 22 to December 29 (161 days, 23 weeks).\nIn our shiny app, one could find 5 tabs:\n\rExplore Variable\nReaders could choose variables and see the relationship between the variable of select and the number of counts(being pulled over). In addition, we also provide two options for you. One could choose to view the total case of selected variable or could choose to view the daily cases.\n\rExplore Time Duration\nAgain, Readers could choose variables. Furthermore, we provided a box-plot to show the relationship between the selected variable and log_stop_duration_minutes. One could find out the distribution of each category of selected variables. Readers could also see the results of anova table (partialy), which shouw the test results about comparing the average duration time in different groups.\n\rPull-Over Map\nWe provided a map of DC and used shadow to present how frequently polices will pull over drivers on average in seven Police District (defined by DC Metropolitan Police Department). The darker the color, polices will pull-over more frequently. Here, we provide two options: One could choose to view the map by weekday or by hourly.\n\rSpreadsheet\nHere is the data set we found from https://mpdc.dc.gov/node/1464816. Readers could find specific row if you want to.\n\r\r\rReference\r1, Alex, \u0026amp; jdharrison. (2014, April 27). Outputting multiple lines of text with renderText() in R shiny. Stack Overflow.\nhttps://stackoverflow.com/questions/23233497/outputting-multiple-lines-of-text-with-rendertext-in-r-shiny.\n2, leaflet for R – Choropleths.\nhttps://rstudio.github.io/leaflet/choropleths.html.\n3, Parker, E. COVID-19 tracker.\nhttps://shiny.rstudio.com/gallery/covid19-tracker.html.\n4, Soltoff, B. (2020, April 10). Drawing interactive maps with Leaflet.\nhttps://cfss.uchicago.edu/notes/leaflet/.\n5, warship, \u0026amp; DeanAttali. (2017, February 5). Create URL hyperlink in R Shiny? Stack Overflow.\nhttps://stackoverflow.com/questions/42047422/create-url-hyperlink-in-r-shiny.\n\rData Sources:\r1, Police Districts. (2019, June 25).\nhttps://opendata.dc.gov/datasets/d2a63e5246ff41bdaca8ea9be95c8a4b_9/data.\n2, Stop Data Report: 2020. Stop Data Report: 2020. (2020, March 4).\nhttps://mpdc.dc.gov/node/1464816.\n\r","date":1597363200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597462226,"objectID":"4fa4d47d8af5afc8d5760c9038d79666","permalink":"/project/dc-pull-over/","publishdate":"2020-08-14T00:00:00Z","relpermalink":"/project/dc-pull-over/","section":"project","summary":"We are analyzing Stop Data Report from DC Metropolitan Police Department, and visualizing the data and made it easy to understand for readers to absorb information.","tags":["Data Visualization","Statistics"],"title":"DC Pull-Over Analysis","type":"project"},{"authors":["Ruiqi Sun"],"categories":["R","Markdown"],"content":"\r\rTo cross-referring a hand-made table like this:\n $\\boldsymbol m_{ij}$ $Pr(z_{ij}=0)$ $Pr(z_{ij}=1)$ $Pr(z_{ij}=2)$ ---------------------- ---------------- ---------------- ---------------- (2, 0, 0) 1 0 0 (1, 1, 0) 0.5 0.5 0 (1, 0, 1) 0 1 0 (0, 2, 0) 0.25 0.5 0.25 (0, 1, 1) 0 0.5 0.5 (0, 0, 2) 0 0 1 Table: (\\#tab:label) table name\rYou chould add (\\#tab:label)before the table name, and use \\@ref(tab:label)to refer the table 1.\n\rTable 1:  table name\r\r\\(\\boldsymbol m_{ij}\\)\r\\(Pr(z_{ij} = 0)\\)\r\\(Pr(z_{ij} = 1)\\)\r\\(Pr(z_{ij} = 2)\\)\r\r\r\r(2, 0, 0)\r1\r0\r0\r\r(1, 1, 0)\r0.5\r0.5\r0\r\r(1, 0, 1)\r0\r1\r0\r\r(0, 2, 0)\r0.25\r0.5\r0.25\r\r(0, 1, 1)\r0\r0.5\r0.5\r\r(0, 0, 2)\r0\r0\r1\r\r\r\r","date":1596672000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596731027,"objectID":"0e1bd5855816791ec8b97f2ef0940384","permalink":"/post/how-to-cross-referring-a-hand-made-table-in-markdown/","publishdate":"2020-08-06T00:00:00Z","relpermalink":"/post/how-to-cross-referring-a-hand-made-table-in-markdown/","section":"post","summary":"Tips for markdown.","tags":["Tips","Markdown"],"title":"How to cross-referring a hand-made table in markdown","type":"post"},{"authors":["Ruiqi Sun"],"categories":["R","stan"],"content":"\r\r\rIntroduction\rMethods\r\rEstimating Preferential Pairing using Maximum Likelihood Estimation\rCombining information between loci to identify preferential pairing parameters via model-based clustering\r\rClustering by Stan\rClustering by Dip Test\rClustering by Mclust\r\r\rResults\r\rMaximum Likelihood Simulation\rSimulation of model based on clustering\r\rData set\rClustering results by Stan\rClustering results by Dip Test\rClustering results by Mclust\rComparing three methods\r\r\rConclusion\rReference\r\r\r Click the Slides button above to see the talk, and please use full screen method.   Introduction\rPolyploidy refers to the presence of more than two sets of chromosomes\rwithin a single organism (Mason 2017). Polyploidy plays\rimportant roles in agriculture (Hilu 1993), species evolution\r(Otto and Whitton 2000; Joly et al. 2006; Wendel 2000), medicine\r(Coward and Harding 2014), among other fields. The research on polyploids is\rthus extensive. Several agricultural crops, such as wheat, soybean,\rpotatoes, sugarcane, and cotton are polyploids (Hilu 1993), and\rpolyploidy plays an important role on plant evolution\r(Otto and Whitton 2000). Polyploidization is also a property of some\rcancerous cells (Coward and Harding 2014). Therefore, studying polyploids is of\rgreat significance.\nPolyploids are often divided into two categories based on their\revolutionary histories — allopolyploids and autopolyploids\r(Cao, Osborn, and Doerge 2004). Autopolyploids arise from whole genome duplications\rwithin a single species. Allopolyploids arise by hybridization between\rspecies yielding polyploidization (Bourke et al. 2017). Chromosomes\rare also divided into two categories. Two chromosomes that arise from\rthe same species are called homologues. Two chromosomes that arise from\rseparate species are said to be homoeologues.\nAllopolyploids and autopolyploids are often distinguishable by their\rmeiotic behavior, which exhibits greater complexity than in diploids.\rMeiosis is an elementary process in biology (Voorrips and Maliepaard 2012), which\rallows parents to send their genetic materials to the next generation.\rThere are many steps to meiosis, but we will focus on the pairing\rbehavior during prophase I. During prophase I, the nucleoli and nuclear\renvelop disappear, hom(oe)ologous chromosomes pair and exchange genetic\rmaterial. In allopolyploids, homologous chromosomes always pair with\reach other during prophase I. In autopolyploids, hom(oe)ologous\rchromosomes randomly pair together with no preference.\nThe definition of autopolyploidy and allopolyploidy based on the\revolutionary background depends on arbitrary thresholds of evolutionary\rrelatedness of homoeologues. Characterizing meiotic behavior requires no\rsuch thresholds and so researchers have also suggested defining ploidy\rby their meiotic behavior. However, unlike in diploids, where a parent\rsends one copy to each offspring, in polyploids there is greater\rdiversity in the behavior of gametic transmission. For example, in\rtetraploids (individuals with four copies of their genome) there are\r\\(\\binom{4}{2}/2!\\) = 3 ways that gametes can pair during\rmeiosis. Therefore, there are many complications in estimating meiotic\rbehavior. A complication that arises in distinguishing between ploidy\rtypes is that some pairing configurations are more common than other\r(Sybenga 1994). In a polyploid the given chromosomes may be\rcompletely homologues or there may be two slightly different types\r(homoeologues) present that pair more easily with their own type than\rwith the other (Voorrips and Maliepaard 2012). The degree of preferential pairing\rmay vary from 0% (fully random pairing, as in autopolyploids where the\rfour copies of a chromosome are completely homologous) to 100% (the\rhomoeologues pair exclusively with their own type, as in\rallopolyploids). Thus, intermediate forms with partially preferential\rpairing may occur. Therefore, based on pairing behavior in meiosis,\rthere are three pairing behaviors: autopolyploids, allopolyploids, and\rintermediate levels of preferential pairing (Bourke et al. 2017).\nPreferential pairing has been estimated in several ways. Ancestral\rorigin frequencies are used to infer preferential pairing rates\r(Sybenga 1994). The method of haplotype reconstruction, provided\rin TetraOrigin, consists of multilocus parental linkage phasing and\rsubsequent ancestral inference from SNP dosage data\r(Zheng et al. 2016). Preferential pairing can also be estimated by\rexamining repulsion‐phase linkage patterns (Bourke et al. 2017).\nUnfortunately, none of the above methods directly use genotype data, a\rcommon form of data in the modern sequencing age. For many types of\rdata, the dosage of alleles are available at individual loci, but the\rphased configuration of these alleles are not known. These data often\rresult from next-generation sequencing technologies that are then\rgenotyped using genotyping software\r(Gerard et al. 2018; Gerard and Ferrão 2019; Clark, Lipka, and Sacks 2019; Blischak, Kubatko, and Wolfe 2018; Voorrips, Gort, and Vosman 2011).\rWe use genotype data with F1 population (full-sib progeny of two\rparents) directly to analysis preferential pairing. Throughout, we\rassume that we are dealing with a tetraploid population and leave higher\rploidy levels for future work. Therefore, In this thesis, we wish to\rdistinguish between the types of ploidy and to estimate the strength of\rpreferential pairing in polyploids from genotype data with F1 population\rdirectly.\nIn this thesis, we will use F1 population in genotype data, which\rconsists of full-sib progeny of two parents. In an F1 population, each\rindividual is the result of two meiotic divisions from each parent. We\rthus have replications of the meiotic behavior from each parent. We\rbegin by providing a way to estimate preferential pairing at each locus\rfrom parents’ and progenies’ genotype. Due to the unidentifiability of\rwhich chromosomes contain which alleles, we provide a way based on\rclustering to identify this and estimate interpretable parameters. At\rlast, through a simulation study, we demonstrate that our work can\rdistinguish between the types of ploidy from genotype data directly.\nThe following is the outline of our paper. In Section 2.1, we\rprovide a way to estimate preferential pairing at each locus using just\rgenotype data. In Section 2.2, we provide a way to identify the\rparameterization and estimate interpretable parameters using model-based\rclustering. We demonstrate, through simulations, in Section 3.1\rthat we can accurately estimate the levels of preferential pairing at\reach locus through maximum likelihood estimation. We demonstrate in\rSection 3.2 that we can accurately distinguish between\rautopolyploidy and intermediate levels of polyploidy. However, we note\rthat accurately detecting allopolyploidy is difficult. We conclude with\ra discussion in Chapter 4 .\n\rMethods\rEstimating Preferential Pairing using Maximum Likelihood Estimation\rIn this section, we will introduce a method to estimate preferential\rpairing from genotype data. We will now describe the data under\rconsideration. We assume that we are working with an F1 population (a\rbiparental cross) which is common in breeding populations\r(Sybenga 1994). An F1 population consists of parents and\roffspring. We assume that we have genotype data from each parent and\reach offspring. Genotype data consists of an integer\r\\(\\{0, 1, \\ldots,K\\}\\) of the number of reference alleles an individual\rcontains at a bi-allelic locus. We will denote the reference allele by\rand the alternative allele by . We denote the ploidy by \\(K\\), which we\rassume to be the same for all individuals. In our research, we are\rinterested the pairing behavior in tetraploids (\\(K = 4\\)). For\rconvenience, we have summarized all the parameters we used in Table 1.\n\rTable 1:  Parameter interpretation\r\rParameter\rMeans\r\r\r\r\\(K\\)\rThe ploidy of the species. In our model, we assume all individuals are tetraploid (i.e. \\(K = 4\\)).\r\r\\(\\ell_j\\)\rThe genotype of parent \\(j\\), which is defined as the dosage of A’s in parent \\(j\\)’s genome.\r\r\\(\\boldsymbol m_{ij}\\)\rPairing configuration of a parent for a child \\(i\\). \\(\\boldsymbol m_{ij}=(m_{1ij}, m_{2ij}, m_{3ij})\\)\r\r\\(m_{1ij}\\)\rThe number of copies of “aa” from parent \\(j\\)\r\r\\(m_{2ij}\\)\rThe number of copies of “Aa” from parent \\(j\\)\r\r\\(m_{3ij}\\)\rThe number of copies of “AA” from parent \\(j\\)\r\r\\(z_{ij}\\)\rThe number of A’s sent by parent \\(j\\) to child i.\r\r\\(y_i\\)\rThe genotype of children \\(i\\), which is defined as the dosage of A’s in child \\(i\\)’s genome, \\(i \\in \\{1, 2, ..., n \\}\\).\r\r\\(\\theta_i\\)\rThe probability of two chromosomes pairing together, \\(i \\in \\{1, 2, 3\\}\\).\r\r\\(\\theta_1\\)\rThe probability of chromosome 1 and 2 pair together while chromosome 3 and 4 pair together.\r\r\\(\\theta_2\\)\rThe probability of chromosome 1 and 3 pair together while chromosome 2 and 4 pair together.\r\r\\(\\theta_3\\)\rThe probability of chromosome 1 and 4 pair together while chromosome 2 and 3 pair together.\r\r\\(\\gamma_{jk}\\)\rPreferential pairing parameter of parent \\(j\\) at locus \\(k\\), \\(j \\in \\{1, 2\\}\\), \\(k \\in \\{1, \\ldots, m\\}\\).\r\r\r\rTo estimate preferential pairing, we need to understand the possible\rpairing pattern in meiosis and define the preferential pairing\rparameter. During prophase I, chromosomes will pair with each other. For\rtetraploids, under bivalent pairing, there are three possible pairing\rpatterns: pair together, pair together, or pair together, which is\rcalled a “pairing configuration”. To be more specific, we use\r\\(\\boldsymbol{m}_{ij} = (m_{1ij}, m_{2ij}, m_{3ij})\\) to record the number of each\rpattern from parent \\(j\\) to a child \\(i\\) (\\(j \\in (1,2)\\)). In \\(\\boldsymbol m_{ij}\\),\r\\(m_{1ij}\\) is the number of copies of from parent \\(j\\) to child \\(i\\),\r\\(m_{2ij}\\) is the number of copies of from parent \\(j\\) to child \\(i\\), and\r\\(m_{3ij}\\) is the number of copies of from parent \\(j\\) to child \\(i\\). Let\r\\(\\ell_j\\) denote the (known) number of copies of for parent \\(j\\)’s genome.\rThe pairing configuration for each offspring depends on parents’\rgenotypes. After getting the genotype of parent \\(j\\), we can get the\rpossible values of \\(\\boldsymbol m_{ij}\\). We characterize the distribution of\rpairing configurations to record the frequency of three patterns ( pair\rtogether, pair together, or pair together), that is the frequency at\rwhich reference and alternative alleles pair during meiosis. The\rdistribution of \\(\\boldsymbol m_{ij}\\) is conditional on the values of \\(\\ell_1\\)\rand \\(\\ell_2\\). We provide this distribution in Table 2. When\r\\(\\ell_j\\) = 2, there are two possible pairing configurations:\r\\(\\boldsymbol m_{ij}=(1, 0, 1)\\) or \\(\\boldsymbol m_{ij}=(0, 2, 0)\\). Therefore, we define\r\\(\\gamma_{jk}\\) to be the probability of the pairing configuration\r\\(\\boldsymbol m_{ij}=(1, 0, 1)\\) from parent \\(j\\) at locus \\(k\\) when \\(\\ell_j = 2\\).\rThus \\(1-\\gamma_{jk}\\) is the probability of the pairing configuration\r\\(\\boldsymbol m_{ij}=(0, 2, 0)\\) from parent \\(j\\) at locus \\(k\\) when \\(\\ell_j = 2\\).\rWe are interested in \\(\\gamma_{jk}\\), which is also called preferential\rpairing parameter.\n\rTable 2:  Distribution of pairing configuration\r\r\r\r \\(\\boldsymbol m_{ij}\\) \r\\(Pr(\\boldsymbol m_{ij} | \\ell_j = 0)\\)\r\\(Pr(\\boldsymbol m_{ij} | \\ell_j = 1)\\)\r\\(Pr(\\boldsymbol m_{ij} | \\ell_j = 2)\\)\r\\(Pr(\\boldsymbol m_{ij} | \\ell_j = 3)\\) \r\\(Pr(\\boldsymbol m_{ij} | \\ell_j = 4)\\)\r\r\r\r(2, 0, 0)\r1\r0\r0\r0\r0\r\r(1, 1, 0)\r0\r1\r0\r0\r0\r\r(1, 0, 1)\r0\r0\r\\(\\gamma_{jk}\\)\r0\r0\r\r(0, 2, 0)\r0\r0\r\\(1-\\gamma_{jk}\\)\r0\r0\r\r(0, 1, 1)\r0\r0\r0\r1\r0\r\r(0, 0, 2)\r0\r0\r0\r0\r1\r\r\r\rAfter defining the parameter we interested, we need to find a method to\restimate the preferential pairing parameter. For tetraploids, during\rprophase I, under bivalent pairing, there are three possible pairing\rconfigurations: pairing together, pairing together, or pairing together.\rDuring anaphase I and telophase I, pairing chromosomes move to the\ropposite poles of the cell and separate into two individual cells.\rTherefore, if the pattern is , one will be sent to the offspring.\rSimilarly, if the pattern is , one will be sent to the offspring.\rHowever, if the pattern is , both and will have equal probability to be\rsent to the offspring. We define \\(z_{ij}\\) to be the number of ’s sent by\rparent \\(j\\) to child \\(i\\), and use\r\\(\\boldsymbol m_{ij}=(m_{1ij}, m_{2ij}, m_{3ij})\\) to record the pairing\rconfiguration of parent \\(j\\) for child \\(i\\). We can conclude that the\rdistribution for allele segregation is \\(z_{ij}\\) = \\(m_{3ij}\\) +\r\\(Binomial(\\frac{1}{2}, m_{2ij})\\). Therefore,\r\\(z_{ij} \\in \\{0, ..., \\min(\\frac{K}{2}, \\ell_j)\\}\\). Therefore, we can\rget \\(Pr(z_{ij}|\\ell_j, \\gamma_{jk})\\) by integrating over the pairing\rconfigurations. The probability distribution of \\(z_{ij}\\) given the\rpairing configurations is presented in Table 3.\n\rTable 3:  Distribution of The Number of A’s Sent by Parent \\(j\\) to child \\(i\\)\r\r\\(\\boldsymbol m_{ij}\\)\r\\(Pr(z_{ij} = 0)\\)\r\\(Pr(z_{ij} = 1)\\)\r\\(Pr(z_{ij} = 2)\\)\r\r\r\r(2, 0, 0)\r1\r0\r0\r\r(1, 1, 0)\r0.5\r0.5\r0\r\r(1, 0, 1)\r0\r1\r0\r\r(0, 2, 0)\r0.25\r0.5\r0.25\r\r(0, 1, 1)\r0\r0.5\r0.5\r\r(0, 0, 2)\r0\r0\r1\r\r\r\rThe above exposition results in a likelihood for the preferential\rpairing parameter, \\(\\gamma_{jk}\\), that we can estimate via maximum\rlikelihood. We define \\(y_i\\) as the genotype of children \\(i\\), which\rrecords the dosage of in child \\(i\\)’s genotype, and\r\\(y_i = z_{i1} + z_{i2}\\),\r\\(Pr(y_i|\\ell_1, \\ell_2, \\gamma_{1k}, \\gamma_{2k})\\) is a convolution of\r\\(Pr(z_{i1}|\\ell_1, \\gamma_{1k})\\) and \\(Pr(z_{i2}|\\ell_2, \\gamma_{2k})\\).\rTherefore, we can conclude that\r\\[\\begin{align}\r\\tag{1}\rPr(y|\\ell_1,\\ell_2,\\gamma_{1k},\\gamma_{2k}) = \\sum_{i=\\max(0, y - 2)}^{\\min(2,y)} Pr(i|\\ell_1, \\gamma_{1k})Pr(y-i|\\ell_2, \\gamma_{2k})\r\\end{align}\\]\rSuppose we have \\(Y_1, Y_2, ..., Y_n\\), the realizations from each child,\rwhich are independent and identically distributed according to\rprobability mass function (1). We can use maximum likelihood estimation to\restimate the preferential pairing parameters \\(\\gamma_{1k}\\) and\r\\(\\gamma_{2k}\\). The likelihood can be simplified by using summary\rstatistics of counts of offspring genotypes as follows:\r\\[\\begin{align}\r\\tag{2}\r\\begin{split}\rL(\\gamma_{1k}, \\gamma_{2k}|Y_1, Y_2, ..., Y_n) =\u0026amp; n_0\\log(Pr(Y_i = 0)) + n_1\\log((Pr(Y_i = 1)) \\\\\r\u0026amp;+ n_2\\log((Pr(Y_i = 2)) + n_3\\log((Pr(Y_i = 3)) \\\\\r\u0026amp;+ n_4\\log((Pr(Y_i = 4)),\r\\end{split}\r\\end{align}\\]\r\rwhere \\(n_i\\) is the number of children\rwhich have genotype of \\(i\\), \\(i \\in \\{0, 1, 2, 3, 4\\}\\). Note that\r\\(\\gamma_{1k}\\) appears only at \\(\\ell_1 = 2\\) and \\(\\gamma_{2k}\\) appears\ronly at \\(\\ell_2 = 2\\). We used Brent’s method (Brent 1973) to\rmaximize likelihood (2) and find the MLE of \\(\\gamma_j\\) in R.\n\rCombining information between loci to identify preferential pairing parameters via model-based clustering\rIn the previous section, we obtained preferential pairing parameter\restimates (the \\(\\hat\\gamma_{jk}\\)’s) via maximum likelihood estimation.\rSince both parents are from the same species, we make the assumption\rthat \\(\\hat\\gamma_{1k} = \\hat\\gamma_{2k}\\). Therefore, to simplify\rnotation, we ignore which parent the preferential pairing parameter\rcomes from, and denote \\(\\hat\\gamma_{jk}\\) by just \\(\\hat\\gamma_k\\). Each\r\\(\\hat\\gamma_k\\) estimates one of \\(\\{\\theta_1, \\theta_2, \\theta_3\\}\\). If\rat locus \\(k\\), chromosomes 1 and 2 carry the same allele and chromosomes\r3 and 4 carry the other allele, \\(\\hat{\\gamma}_k\\) is estimating\r\\(\\theta_1\\). If at locus \\(k\\), chromosomes 1 and 3 carry the same allele\rand chromosomes 2 and 4 carry the other allele, \\(\\hat{\\gamma}_k\\) is\restimating \\(\\theta_2\\). If at locus \\(k\\), chromosomes 1 and 4 carry the\rsame allele and chromosomes 2 and 3 carry other the allele,\r\\(\\hat{\\gamma}_k\\) is estimating \\(\\theta_3\\). However, due to the\runidentifiability of which chromosomes contain which alleles, which\r\\(\\theta_j\\) each \\(\\hat{\\gamma}_i\\) corresponds to is unknown. However, by\rborrowing information between loci, we see that there should be three\rclusters of \\(\\hat{\\gamma}_k\\)’s — one corresponding to each \\(\\theta_j\\).\rThus, we will use model-based clustering approaches to identify and\restimate the \\(\\theta_j\\)’s, and thereby estimate the degree and strength\rof preferential pairing.\nClustering by Stan\rDuring prophase I, tetraploids, which contain four copies of chromosomes\rin their genomes, will pair bivalently, and there are three possible\rpairing behaviors. The four copies are denoted as chromosomes 1, 2, 3,\rand 4. Under bivalent pairing, there are three possible formations: (i)\r1 and 2 pair together while 3 and 4 pair together; (ii) 1 and 3 pair\rtogether while 2 and 4 pair together; and (iii) 1 and 4 pair together\rwhile 2 and 3 pair together. Let \\(\\theta_1\\) denote the probability of\rthe first situation, \\(\\theta_1 = Pr\\)({12}{34}); \\(\\theta_2\\) denote the\rprobability of the second situation, \\(\\theta_2 = Pr\\)({13}{24}); and\r\\(\\theta_3\\) denote the probability of the third situation,\r\\(\\theta_3 = Pr\\)({14}{23}). Tetraploids also have three different pairing\rbehavior: autopolyploidy, allopolyploidy and partial preferential\rpairing. For autopolyploidy, hom(oe)ologous chromosomes randomly pair\rtogether. For allopolyploidy, homologous chromosomes always pair with\reach other during prophase I. For partial preferential pairing, there is\rintermediate pairing behavior, all hom(oe)ologous pair but there is a\rpreference for homologous pairing (Bourke et al. 2017). Therefore,\rfor autopolyploidy, there is no preferential pairing and\r\\(\\theta_1 = \\theta_2 = \\theta_3 = \\frac{1}{3}\\), so\r\\(E[\\hat{\\gamma}] \\approx \\frac{1}{3}\\); for allopolyploidy, homologous\rchromosomes always pair with each other and thus one \\(\\theta\\) should be\r1 and the other two \\(\\theta_j\\)’s should be 0. For intermediate pairing\rbehavior, we take the approach of (Wu et al. 2001) and assume the\rprobability of either configuration of homoeologous pairing is equal.\rThus, we let \\(\\theta\\) denote the probability of homologous pairing,\rwhich implies that each homoeologous pairing configuration has\rprobability \\(\\frac{1-\\theta}{2}\\). We make the reasonable assumption that\rhomologous pairing is more likely and so \\(\\theta \u0026gt; \\frac{1}{3}\\). If\r\\(\\theta\\) is the probability of homologous pairing, these scenarios\rtogether imply \\(\\theta = \\frac{1}{3}\\) for autopolyploids, \\(\\theta = 1\\)\rfor allopolyploids, and \\(\\theta \\in (\\frac{1}{3}, 1)\\) for segmental\rpolyploids.\nStandard results from maximum likelihood theory guarantee asymptotic\rnormality of the maximum likelihood estimators\r(Casella and Berger 2002). Therefore, we model the estimates\r\\(\\hat{\\gamma}_k\\)’s according a normal mixture model. Each mixture\rcorresponds to either homologous pairing (with mean \\(\\theta\\)) or\rhomoeologous pairing (with mean \\(\\frac{1-\\theta}{2}\\)). Thus, we can\rmodel each \\(\\hat{\\gamma}_k\\) with\r\\[\\begin{align}\rf(\\hat{\\gamma}_k|\\theta, \\sigma_1^2, \\sigma_2^2, \\pi) = \\pi N(\\hat{\\gamma}_k|\\theta, \\sigma_1^2) + (1-\\pi) N(\\hat{\\gamma}_k|\\frac{1 - \\theta}{2}, \\sigma_2^2)\r\\end{align}\\]\rwhere \\(N(\\cdot|a,b)\\) denotes the normal density function with mean \\(a\\)\rand variance \\(b\\). Here, \\(\\pi\\) is the proportion of \\(\\hat{\\gamma}_k\\) that\rare estimating \\(\\theta\\) — or, in other words, the proportion of loci\rsuch that the homologous chromosomes share the same alleles. The joint\rpdf of \\(\\boldsymbol{\\hat\\gamma} = (\\hat\\gamma_1, \\dots, \\hat\\gamma_m)\\) is thus\r\\[\\begin{align}\r\\tag{3}\rf(\\hat\\gamma_1, \\dots, \\hat\\gamma_m |\\pi, \\theta, \\sigma_1^2,\\sigma_2^2) = \\prod_{i=1}^{n} [\\pi N(\\hat\\gamma_k|\\theta,\\sigma_1^2)+(1-\\pi)N(\\hat\\gamma_k|\\frac{1-\\theta}{2},\\sigma_2^2)]\r\\end{align}\\]\nWe will estimate the parameters in (3) using Bayesian approaches. This\rrequires setting priors over the parameters \\(\\theta\\), \\(\\pi\\),\r\\(\\sigma_1^2\\) and \\(\\sigma_2^2\\). We place a non-informative prior over the\rploidy type (autopolyploidy versus intermediate versus allopolyploidy),\rassuming each occurs a priori with probability \\(\\frac{1}{3}\\):\n\\[\\begin{align}\r\\tag{4}\r\\theta \\sim\r\\begin{cases}\r\\delta(\\frac{1}{3}) \u0026amp; \\text{w.p.} \\frac{1}{3}\\\\\r\\text{unif}(\\frac{1}{3}, 1)\u0026amp; \\text{w.p.} \\frac{1}{3} \\\\\r\\delta(1) \u0026amp; \\text{w.p.} \\frac{1}{3},\r\\end{cases}\r\\end{align}\\]\nwhere \\(\\delta(a)\\) denotes the degenerate distribution\rwith pointmass at \\(a\\). Placing this mixed discrete/continuous prior over\r\\(\\theta\\) will induce the posterior to give us posterior probabilities of\reach ploidy type based on the posterior distribution of \\(\\theta\\). For\rthe other parameters, the prior of \\(\\pi\\) is \\(\\pi \\sim Beta(1,2)\\), which\rcorresponds to placing a dirichlet(1,1,1) prior over\r\\((\\theta_1, \\theta_2, \\theta_3)\\) then conditioning on\r\\(\\theta_2 = \\theta_3\\). In order to place a prior on \\(\\sigma^2\\), we use\rthe results of Theorem 1, where\r\\(\\max\\sigma^2 = \\frac{1}{4}\\). Thus, for \\(\\sigma^2\\), we set\r\\(\\sigma^2 \\sim unif(0,\\frac{1}{4})\\).\nTheorem 1 Let X be a random variable with support on [0,1], then\r\\[\\begin{align}\r\\max\\{Var(X)\\}=\\frac{1}{4}.\r\\end{align}\\]\r\rProof.  Given that X \\(\\in[0,1]\\), we have\r\\[\\begin{align}\rX^2 \\leq X \\Rightarrow E(X^2) \\leq E(X) = m\r\\end{align}\\]\rthus\r\\[\\begin{align}\r\\tag{5}\rVar(X) = E(x^2) - E(X)^2 \\leq m - m^2\r\\end{align}\\]\rThis variance bound is maximized at \\(m=\\frac{1}{2}\\), for which the bound has value\r\\(\\frac{1}{4}\\). Since a \\(Bern(\\frac{1}{2})\\) random variable has variance\r\\(\\frac{1}{4}\\), this bound is tight.\r\rTo get the posterior probability\r\\(Pr(Pairing\\ Behavior|\\hat\\gamma_1, \\dots, \\hat\\gamma_m)\\), we will use\rthe Stan probabilistic programming language (Stan Development Team 2020). Stan (Sampling\rthrough adaptive neighborhoods) is a program which will automatically\rapply Hamiltonian Monte Carlo given a Bayesian model. We just need to\rset up the prior distribution and the data distribution, identify the\rparameter we want to estimate, and then we can obtain samples from the\rposterior distribution. This allows us to calculate various summaries of\rthe posterior distribution. However, Stan does not allow for discrete\rparameterizations. This causes problems due to the prior we have for\r\\(\\theta\\) that distinguishes between ploidy types (4). Thus, we fit the\rfollowing equivalent model in Stan that reparameterizes \\(\\theta\\) to just\rbe the preferential pairing parameter given intermediate levels of\rpreferential pairing, and marginalizes out the ploidy types.\n\\[\\begin{align*}\r\\tag{6}\rf_1(\\hat\\gamma_1, \\dots, \\hat\\gamma_m |\\pi, \\sigma_1^2,\\sigma_2^2) \u0026amp;= \\prod_{i=1}^{n} [\\pi N(\\hat\\gamma_k|\\frac{1}{3},\\sigma_1^2)+(1-\\pi)N(\\hat\\gamma_k|\\frac{1}{3},\\sigma_2^2)]\\\\\r\\tag{7}\rf_2(\\hat\\gamma_1, \\dots, \\hat\\gamma_m | \\pi,\\theta, \\sigma_1^2,\\sigma_2^2) \u0026amp;= \\prod_{i=1}^{n}[\\pi N(\\hat\\gamma_k|\\theta,\\sigma_1^2)+(1-\\pi)N(\\hat\\gamma_k|\\frac{1-\\theta}{2},\\sigma_2^2)]\\\\\r\\tag{8}\rf_3(\\hat\\gamma_1, \\dots, \\hat\\gamma_m|\\pi, \\sigma_1^2,\\sigma_2^2) \u0026amp;= \\prod_{i=1}^{n} [\\pi N(\\hat\\gamma_k|1,\\sigma_1^2)+(1-\\pi)N(0,\\sigma_2^2)]\\\\\r\\end{align*}\\]\n\\[\\begin{align*}\r\\tag{9}\r\\begin{split}\rf(\\hat\\gamma_1, \\dots, \\hat\\gamma_m|\\pi, \\theta, \\sigma_1^2,\\sigma_2^2) \u0026amp;= \\frac{1}{3}f_1(\\hat\\gamma_1, \\dots, \\hat\\gamma_m |\\pi, \\sigma_1^2,\\sigma_2^2)\\\\\r\u0026amp;+ \\frac{1}{3}f_2(\\hat\\gamma_1, \\dots, \\hat\\gamma_m | \\pi,\\theta, \\sigma_1^2,\\sigma_2^2) \\\\\r\u0026amp;+ \\frac{1}{3}f_3(\\hat\\gamma_1, \\dots, \\hat\\gamma_m|\\pi, \\sigma_1^2,\\sigma_2^2)\r\\end{split}\r\\end{align*}\\]\nNote that, for \\(f_3\\), MLE theory is no longer\rvalid because the parameter is on the boundary of the parameter space\r(Marchand and Strawderman 2004). For convenience, we continue to use normality as an\rapproximation and leave better modeling for future work. The likelihood\rwe implemented in Stan is (9).\nIn order to obtain the posterior probability of each ploidy type, we\rneed to calculate the marginal distribution of the \\(\\hat{\\gamma}\\)’s\rconditional on the ploidy type. Stan (Stan Development Team 2018) will perform this\rmarginalization automatically. Thus, we can obtain the following:\n\\[\\begin{align*}\r\\tag{10}\r\\begin{split}\rL_1 \u0026amp;= Pr(\\boldsymbol{\\hat\\gamma} |autopolyploidy) \\\\\r\u0026amp;= \\int_{\\pi,\\sigma_1,\\sigma_2} f_1(\\hat\\gamma_1, \\dots, \\hat\\gamma_m |\\pi, \\sigma_1^2,\\sigma_2^2)f(\\pi)f(\\sigma_1^2)f(\\sigma_2^2)d\\pi d\\sigma_1^2 d\\sigma_2^2\\\\\r\\end{split}\\\\\r\\tag{11}\r\\begin{split}\rL_2 \u0026amp; = Pr(\\boldsymbol{\\hat\\gamma} |Intermediate) \\\\\r\u0026amp; = \\int_{\\theta, \\pi,\\sigma_1,\\sigma_2} f_2(\\hat\\gamma_1, \\dots, \\hat\\gamma_m | \\pi,\\theta, \\sigma_1^2,\\sigma_2^2)f(\\theta)f(\\pi)f(\\sigma_1^2)f(\\sigma_2^2)d\\theta d\\pi d\\sigma_1^2 d\\sigma_2^2\\\\\r\\end{split}\\\\\r\\tag{12}\r\\begin{split}\rL_3 \u0026amp;= Pr(\\boldsymbol{\\hat\\gamma} |allopolyploidy) \\\\\r\u0026amp;= \\int_{\\pi,\\sigma_1,\\sigma_2} f_3(\\hat\\gamma_1, \\dots, \\hat\\gamma\r_m|\\pi, \\sigma_1^2,\\sigma_2^2)f(\\pi)f(\\sigma_1^2)f(\\sigma_2^2)d\\pi d\\sigma_1^2 d\\sigma_2^2 \\\\\r\\end{split}\r\\end{align*}\\]\nStan will provide posterior samples of the logs of \\(L_1\\), \\(L_2\\),and\r\\(L_3\\). We may average these posterior samples to obtain estimates of\r\\(L_1\\), \\(L_2\\), and \\(L_3\\). This averaging was done using the\rlog-sum-exponential trick (13) to maintain computational stability.\r\\[\\begin{align*}\r\\tag{13}\rLSE(x_1, x_2, \\ldots, x_n) = x^* + \\log(\\exp(x_1-x^*)+ \\ldots +\\exp(x_n-x^*))\r\\end{align*}\\]\rwhere \\(x^* = \\max\\{x_1, x_2, \\ldots, x_n\\}\\). According to Bayes’s\rtheorem, we obtain the posterior probability\r\\[\\begin{align*}\r\\tag{14}\r\\begin{split}\r\u0026amp;Pr(autopolyploidy|\\hat\\gamma_1, \\dots, \\hat\\gamma_m) \\\\ \u0026amp;= \\frac{\\frac{1}{3}Pr(\\boldsymbol{\\hat\\gamma}|autopolyploidy)}{\\frac{1}{3}Pr(\\boldsymbol{\\hat\\gamma}|autopolyploidy) +\\frac{1}{3}Pr(\\boldsymbol{\\hat\\gamma}|Intermediate)+\\frac{1}{3}Pr(\\boldsymbol{\\hat\\gamma}|allopolyploidy)} \\\\\r\u0026amp; = \\frac{\\frac{1}{3}L_1}{\\frac{1}{3}L_1+\\frac{1}{3}L_2+\\frac{1}{3}L_3} \\\\\r\u0026amp; = \\frac{L_1}{L_1+L_2+L_3}\\\\\r\\end{split}\\\\\r\\tag{15}\r\\begin{split}\rPr(Intermediate|\\hat\\gamma_1, \\dots, \\hat\\gamma_m) = \\frac{L_2}{L_1+L_2+L_3}\\\\\r\\end{split}\\\\\r\\tag{16}\r\\begin{split}\rPr(allopolyploidy|\\hat\\gamma_1, \\dots, \\hat\\gamma_m) = \\frac{L_3}{L_1+L_2+L_3}\\\\\r\\end{split}\\\\\r\\end{align*}\\]\nFrom Stan, we can also obtain posterior summaries of \\(\\theta\\). Recall\rthat in order to use Stan, we had to remove the discrete\rparameterization of \\(\\theta\\). We now demonstrate how to obtain posterior\rsummaries with the discrete parameterization using the output of Stan.\rFirst, we demonstrate how to obtain posterior quantiles using sample\routputs from Stan. Denote the quantile function (inverse cdf function)\rby \\(F^{-1}(p)\\). Let \\(\\tilde{\\theta}_b\\) be the posterior samples from\rStan. Then we show in the Theorem 2 how to obtain\rposterior quantiles when using prior (4).\rTheorem 2 For any given probability \\(Pr(\\tilde{\\theta}_b \\leq a^*) = q^*\\), we have\n\\(a^*\\) =\n\\(\\begin{cases} \\frac{1}{3} \u0026amp; If q^* \\leq Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma})\\\\ F^{-1}(\\frac{q^*-Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma}}{Pr(Intermediate|\\boldsymbol{\\hat\\gamma})}) \u0026amp; \\begin{align} If Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma}) \u0026lt; q^* \\leq Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma})\\\\ + Pr(Intermediate|\\boldsymbol{\\hat\\gamma}) \\end{align} \\\\ 1 \u0026amp; If q^* \u0026gt; Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma}) + Pr(Intermediate|\\boldsymbol{\\hat\\gamma}) \\end{cases}\\)\r\r Proof.  For given probability \\(Pr(\\theta \\leq a) = q\\), the quantile is\r\\(F^{-1}(q) = a\\). Let \\(a^*\\) be the quantile of posterior samples\rfrom Stan \\(\\tilde{\\theta}_b\\), then\r\\(Pr(\\tilde{\\theta}_b \\leq a^*) = q^*\\).\nThe proportion of autopolyploidy pairing behavior is\r\\(Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma})\\), when \\(\\theta\\) is from\rautopolyploidy, \\(\\theta = \\frac{1}{3}\\)\nThe proportion of intermediate pairing behavior is\r\\(Pr(Intermediate|\\boldsymbol{\\hat\\gamma})\\), when \\(\\theta\\) is from intermediate,\r\\(\\frac{1}{3}\u0026lt;\\theta\u0026lt;1\\).\nThe proportion of allopolyploidy pairing behavior is\r\\(Pr(allopolyploidy|\\boldsymbol{\\hat\\gamma})\\), when \\(\\theta\\) is from\rallopolyploidy, \\(\\theta=1\\).\nTherefore, for given probability \\(q^*\\), the quantile of posterior\rsamples from Stan \\(\\tilde{\\theta}_b\\) is:\n\rIf \\(q^* \\leq Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma})\\),\r\\(a^* = \\frac{1}{3}\\)\n\rIf\r\\(Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma} \u0026lt; q^* \\leq Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma}) + Pr(Intermediate|\\boldsymbol{\\hat\\gamma})\\),\nwe get\r$q^* = Pr(_b a^) = Pr(autopolyploidy|) +Pr(Intermediate|)Pr(_b\u0026lt;a^*|Intermediate) $.\nThen\r\\(Pr(\\tilde{\\theta}_b\u0026lt;a^*|Intermediate) = \\frac{q^*-Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma})}{Pr(Intermediate|\\boldsymbol{\\hat\\gamma})}\\),\r\\(a^* = F^{-1}(\\frac{q^*-Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma})}{Pr(Intermediate|\\boldsymbol{\\hat\\gamma})})\\)\n\rIf\r\\(q^* \u0026gt; Pr(autopolyploidy|\\boldsymbol{\\hat\\gamma}) + Pr(Intermediate|\\boldsymbol{\\hat\\gamma})\\),\r\\(a^* = 1\\)\n\r\r\r\rClustering by Dip Test\rSince the problem of distinguishing between autopolyploidy and other\rtypes of ploidy is equivalent to distinguishing between 1 and 2 clusters\rof observations, we can explore more general methods to accomplish this\rtask. As our first comparison, we consider the dip test\r(Hartigan, Hartigan, and others 1985). The dip test is used to test whether the given data\rhas more than one mode (Hartigan, Hartigan, and others 1985). The test statistic is called\rthe “dip” statistic, denoted as \\(D_n\\), which measures the maximum\rdifference between the empirical distribution function, and the unimodal\rdistribution function that minimizes that maximum difference. The\ralgorithm to calculate the dip statistics \\(D_n\\) is shown in\rHartigan, Hartigan, and others (1985). The null hypothesis of the dip test is the\rdistribution is uniform, which is the “worst case” unimodal\rdistribution. An R package is available that computes the \\(P\\)-value for\rthis unimodal test (Maechler 2016).\n\rClustering by Mclust\rAs our second competitor, we will consider the Mclust R package\r(Scrucca et al. 2016). Similar as dip test, Mclust can also distinguish\rwhether the given data has more than one mode. Mclust uses the normal\rmixture model (17):\r\\[\\begin{align}\r\\tag{17}\rPr\\left(y \\mid \\lambda, \\mu, \\sigma \\right)=\r\\sum_{k=1}^K \\lambda_k \\, \\textsf{Normal}\\left(y \\mid \\mu_k, \\sigma_k\\right).\r\\end{align}\\]\rMclust uses information criteria, such as the BIC to figure out how many\rcomponents should be included in the mixture. In our research,\r\\(\\hat\\gamma_k\\) follows a normal mixture model. For autopolyploidy, there\ris only one component, but for allopolyploidy and intermediate behavior,\rthere are two components. Based on BIC, Mclust will select the number of\rmixture component. In our research, Mclust estimates the ploidy type\rbased on the estimated number of mixture: if the data are from\rautopolyploidy, there is only one mixture, otherwise, there are two\rmixtures. Therefore, we can know whether the data are from\rautopolyploidy or not.\n\r\r\rResults\rMaximum Likelihood Simulation\rTo test our maximum likelihood estimation procedure in Section\r2.1, we ran a simulation study. We varied the following\rparameters:\n\r\\(N\\): This is the number of offspring. We varied\r\\(N \\in \\{25, 50, 100, 500\\}\\).\n\r\\(\\ell_j\\): The number of copies of in parent \\(j\\)’s genotype. There\rare 2 copies of in parent 1 genotype, \\(\\ell_1 = 2\\). There is 0 or 1\rcopies of in parent 2 genotype, \\(\\ell_2 \\in \\{0, 1\\}\\).\n\r\\(\\gamma_{1k}\\): Preferential pairing parameter. We varied the true\rvalue of preferential pairing parameter\r\\(\\gamma_{1k} \\in (0, 0.1, ..., 1)\\).\n\r\rWe tested each unique combination 1000 times, and got the MLE\r\\(\\hat\\gamma_{1k}\\), and evaluated our estimator by plotting the estimate\rfor each simulation condition.\nThe results are displayed in Figure 1. These are boxplots of \\(\\hat\\gamma_{1k}\\) for different sample size \\(n\\), different \\(\\ell_2\\), and different true value of\r\\(\\gamma_{2k}\\). The \\(x\\)-axis is the number of offspring, and the \\(y\\)-axis is the\restimated \\(\\hat\\gamma_{1k}\\). The column facets are indexed by \\(\\ell_2\\),\rand the row facets are indexed by \\(\\gamma_{1k}\\), which also can be\rreferred from the red dash line. The closer the median of the estimate\ris to the red dash line, the more accurate the estimate. From this plot,\rour conclusions are:\n\rThe accuracy is better as \\(N\\) increases.\n\rThe mean of the estimates is around the true value of\r\\(\\hat\\gamma_{1k}\\), therefore the estimates are unbiased\n\rThere is no obvious difference of estimates when \\(\\ell_2\\) is 0 or 1.\n\rWhen the true value is near 0 or 1, the estimates are more accurate,\rwhen the true value is near 0.5, the estimates are relatively\rinaccurate.\n\r\r\rFigure 1: Results of Maximu Likelihood Simulation\n\rWe therefore conclude that our method can accurately estimate\r\\(\\gamma_{1k}\\) at each locus. In the following section, we will show how\rto combine information across the \\(\\gamma_{1k}\\)’s to come up with a more\raccurate estimate of preferential pairing, and to identify the\rparameters.\n\rSimulation of model based on clustering\rIn Section 3.1 we demonstrated that we can consistently estimate\r\\(\\gamma_{1k}\\) at each locus. In this section, we will evaluate the the\rperformance of our model-based clustering approach to estimate \\(\\theta\\)\rand distinguish between the different ploidy types. We compare our\rapproach to that of dip test (Hartigan, Hartigan, and others 1985) and Mclust\r(Scrucca et al. 2016).\nData set\rWe used PedigreeSim to simulate datasets and evaluate our methods\r(Voorrips and Maliepaard 2012). PedigreeSim is a software that generates simulated\rgenetic marker data of individuals in pedigreed populations. We used\rPedigreeSim to generate an F1 population (full-sib progeny of two\rparents) of individuals with varying levels of ploidy and preferential\rpairing. In PedigreeSim we can vary some key parameters and build our\rsimulation. For example, we can set the ploidy of an organism (even\rploidy is supported), population type (selfings of one parent, full-sib\rprogeny of two parents, etc.), sample size, and so on. We also can vary\rthe properties of the chromosome, such as the length of the chromosome,\rcentromere positions, the amount of preferential pairing in polyploids,\rfrom 0.0 (all pairwise combinations have equal probability, as in\rautopolyploids) to 1.0 (fully preferential pairing, as in\rallopolyploids), denoted as prefPairing, and the fraction of\rquadrivalents, denoted as quadrivalents. Note that in PedigreeSim,\r“prefPairing” is not the same as our definition of \\(\\theta\\) in section\r2.2.1. However, there is a simple correspondence between our\rvalue of \\(\\theta\\) and PedigreeSim’s value of prefPairing:\r\\(\\theta = \\frac{1+2\\text{prefPairing}}{3}\\). we can also vary the number\rof single nucleotide polymorphisms (SNPs) in a chromosome. To build our\rgenetic data set, we varied the following parameters\n\rWe fixed the ploidy at 4 (tetraploids).\n\rWe set the the population type to F1: Full-sib progeny of two\rparents.\n\rWe varied sample size in \\(\\{100, 200, 300\\}\\).\n\rWe set the length of chromosome to be 100\n\rWe set the location of the centromere to be at 50 cM, the midpoint\rof the chromosome\n\rWe set the preferential pairing parameter to vary in\r\\(\\{0.00, 0.25, 0.50, 0.75, 1.00\\}\\), from autoteraploidy to\rallopolyploidy.\n\rWe excluded quadrivalents and only allowed for bivalent pairing.\n\rWe fixed the number of SNPs to be 100.\n\r\rWe tested each unique combination of sample size and preferential\rpairing parameter 100 times. For each iteration, we used PedigreeSim to\rgenerate genotype data. Then we used the MLE method in Section\r2.1 to estimate \\(\\hat\\gamma\\). We then clustered the\r\\(\\hat{\\gamma}_k\\)’s via Stan (in Section 2.2.1, dip test (in\rSection 2.2.2), and Mclust (in Section 2.2.3).\n\rClustering results by Stan\rAfter generating the genetic data and estimating the \\(\\gamma_k\\)’s by\rMLE, we used the model illustrated in 2.2.1 to cluster the\r\\(\\hat\\gamma_k\\)’s. The results are shown in Table\r4. Note that when the true value of \\(\\theta\\) is\rbetween in \\(\\frac{1}{3}\\) and 1, preferential pairing exist. We can see\rthat the results are accurate overall, and the over all accuracy is\r83.4%. When the true value of \\(\\theta\\) is near the boundary\r(\\(\\frac{1}{3}\\) or 1), the accuracy is lower: when the true value of\r\\(\\theta = \\frac{1}{3}\\), the accuracy is 74%, when the true value of\r\\(\\theta = \\frac{1}{2}\\), the accuracy is 83.7%, and when the true value\rof \\(\\theta = 1\\), the accuracy is 59.3%. When the true value of \\(\\theta\\)\ris far from the boundary, the results are accurate: when the true value\rof \\(\\theta = \\frac{2}{3}\\) and \\(\\theta = \\frac{5}{6}\\), the accuracy is\r100%. Therefore, our model can accurately distinguish whether the\rpreferential pairing exist, and distinguish the ploidy type.\n\rTable 4:  Clustering results by Stan\r\r\\(Estimating\\ Pairing\\ Behavior\\)\r\\(\\theta = \\frac{1}{3}\\)\r\\(\\theta = \\frac{1}{2}\\)\r\\(\\theta = \\frac{2}{3}\\)\r\\(\\theta = \\frac{5}{6}\\)\r\\(\\theta = 1\\)\r\r\r\rAutopolyploidy\r222\r49\r0\r0\r0\r\rIntermediate\r78\r251\r300\r300\r122\r\rAllopolyploidy\r0\r0\r0\r0\r178\r\rAccuracy\r74%\r83.7%\r100%\r100%\r59.3%\r\r\r\r\rClustering results by Dip Test\rDip test can also help us to distinguish whether the data are from\rautopolyploidy pairing behavior. Based on the model mentioned in Section\r2.2.2, we cluster the \\(\\hat\\gamma_k\\), which are the same as\rthe previous section. The results are shown in Table\r5. According to this results, the overall accuracy is\r75.1%. This model can identify autopolyploidy accurately when the data\rare from autopolyploidy pairing behavior, and the accuracy here is\r95.3%, which is more accurate than Stan method. However, this model less\rable to detect preferential pairing.\n\rTable 5: Clustering results by Dip Test\r\r\\(Estimating\\ Pairing\\ Behavior\\)\r\\(\\theta = \\frac{1}{3}\\)\r\\(\\theta = \\frac{1}{2}\\)\r\\(\\theta = \\frac{2}{3}\\)\r\\(\\theta = \\frac{5}{6}\\)\r\r\r\rAutopolyploidy\r286\r229\r120\r10\r\rNon-autopolyploidy\r14\r71\r180\r290\r\r\r\r\rClustering results by Mclust\rMclust is also a method which can help us to distinguish whether the\rdata are from autopolyploidy pairing behavior. Based on the model\rmentioned in the section 2.2.3, we cluster the\r\\(\\hat\\gamma_k\\)’s, which are the same as in section 3.2.2. The\rresults are shown in Table 6. According to this\rresults, the overall accuracy is 90.6%, which is much higher than dip\rtest. For autopolyploidy data, the accuracy here is 89%, which is more\raccurately than Stan method. Compared with dip test, Mclust will return\rmore accurate results, when the data are from non-autopolyploidy.\rHowever, similar as dip test, Mclust also less able to detect\rpreferential pairing.\n\rTable 6:  Clustering results by Mclust\r\r\\(Estimating\\ Pairing\\ Behavior\\)\r\\(\\theta = \\frac{1}{3}\\)\r\\(\\theta = \\frac{1}{2}\\)\r\\(\\theta = \\frac{2}{3}\\)\r\\(\\theta = \\frac{5}{6}\\)\r\r\r\rAutopolyploidy\r267\r96\r12\r0\r\rNon-autopolyploidy\r33\r204\r288\r300\r\r\r\r\rComparing three methods\rTo compare these three methods, we visualized the results in Figure\r2, and display them in tabular form in Table\r7. The plot shows the accuracy (with corresponding\r95% confidence intervals based on exact binomial methods) for three\rmethods: Stan, Mclust, and dip test, under different levels of sample\rsize and the true value of \\(\\theta\\). The \\(x\\)-axis is the sample size:\r\\(\\{100, 200, 300\\}\\), and the \\(y\\)-axis is the accuracy distinguishing the\rploidy type. The facets index the true of \\(\\theta\\). Each color and line\rtype indicates one method (Stan, dip test, Mclust). The vertical bars\rshow the 95% confidence intervals. Shorter vertical bars indicate more\raccurate results. Table 7 shows the accuracy (with\r95% confidence intervals) for three methods under different simulation\rconditions. Note that Stan is capable of distinguishing among all three\rploidy types, but dip test and Mclust can only distinguish whether the\rgiven data are from autopolyploidy or not.\nAccording to this plot, when the true value of \\(\\theta\\) is\r\\(\\frac{1}{3}\\), the given data are from autopolyploidy. In this case,\rStan method performs worse than Mclust and dip test when the sample size\ris small. When the sample size increases, the accuracy increases. For\rdip test, the accuracy is higher than Stan when the sample size is\rsmall. When the sample size increases, the accuracy also increases, and\rwhen sample size = 300, the accuracy of dip test is 100%. For Mclust,\rwhen the sample size is small, it has a good performance.\nWhen the given data are from intermediate pairing behavior, the results\rare slightly different. When the true value of \\(\\theta\\) is\r\\(\\frac{1}{2}\\), Stan has the best performance when the sample size is 100\rand 200. When the sample size is 300, Mclust also performs well. Dip\rtest has the worst performance. When the true value of \\(\\theta\\) is\r\\(\\frac{2}{3}\\), Stan has the best performance, and the accuracy is 100%.\rMclust’s accuracy can also achieve 100%, when the sample size is 200 and\r300. Dip test still has the worst performance. With increasing sample\rsize, accuracy of all three methods increase or stabilize. Similar to\rthe previous situation, when the true value of \\(\\theta\\) is\r\\(\\frac{5}{6}\\), under this situation, the accuracy of both Stan and\rMclust reaches 100%. When the sample size is 200 and 300, the accuracy\rof dip test can also reaches 100%. With increasing sample size, accuracy\rof all three methods increase or go stable.\nWhen the given data are from allopolyploidy pairing behavior, the true\rvalue of \\(\\theta\\) is 1. Only Stan can distinguish whether the given data\rare from allopolyploidy. When the sample size = 100, the accuracy is\r57%, when the sample size = 200, the accuracy is 63%, and when the\rsample size = 300, the accuracy is 58%. The lower accuracy maybe result\rfrom the boundary issue. The \\(\\hat{\\gamma} \\in [0,1]\\). When true\r\\(\\theta\\) is 1, \\(\\hat\\gamma\\) is close on the boundary, and MLE theory\rbreaks down here. We will work on this problem in the future.\n\rTable 7:  Accuracy for Three Methods under Different Simulation Conditions\r\rGroup\rTrue \\(\\theta\\)\rSample Size\rMethod\rAccuracy\rLower\rUpper\r\r\r\r1\r\\(\\frac{1}{3}\\)\r100\rDip Test\r0.91\r0.84\r0.96\r\r2\r\\(\\frac{1}{3}\\)\r100\rMclust\r0.94\r0.87\r0.98\r\r3\r\\(\\frac{1}{3}\\)\r100\rStan\r0.58\r0.48\r0.68\r\r4\r\\(\\frac{1}{3}\\)\r200\rDip Test\r0.95\r0.89\r0.98\r\r5\r\\(\\frac{1}{3}\\)\r200\rMclust\r0.85\r0.76\r0.91\r\r6\r\\(\\frac{1}{3}\\)\r200\rStan\r0.67\r0.57\r0.76\r\r7\r\\(\\frac{1}{3}\\)\r300\rDip Test\r1.00\r0.96\r1.00\r\r8\r\\(\\frac{1}{3}\\)\r300\rMclust\r0.88\r0.80\r0.94\r\r9\r\\(\\frac{1}{3}\\)\r300\rStan\r0.97\r0.91\r0.99\r\r10\r\\(\\frac{1}{2}\\)\r100\rDip Test\r0.23\r0.15\r0.32\r\r11\r\\(\\frac{1}{2}\\)\r100\rMclust\r0.68\r0.58\r0.77\r\r12\r\\(\\frac{1}{2}\\)\r100\rStan\r0.92\r0.85\r0.96\r\r13\r\\(\\frac{1}{2}\\)\r200\rDip Test\r0.16\r0.09\r0.25\r\r14\r\\(\\frac{1}{2}\\)\r200\rMclust\r0.45\r0.35\r0.55\r\r15\r\\(\\frac{1}{2}\\)\r200\rStan\r0.78\r0.69\r0.86\r\r16\r\\(\\frac{1}{2}\\)\r300\rDip Test\r0.32\r0.23\r0.42\r\r17\r\\(\\frac{1}{2}\\)\r300\rMclust\r0.91\r0.84\r0.96\r\r18\r\\(\\frac{1}{2}\\)\r300\rStan\r0.81\r0.72\r0.88\r\r19\r\\(\\frac{2}{3}\\)\r100\rDip Test\r0.22\r0.14\r0.31\r\r20\r\\(\\frac{2}{3}\\)\r100\rMclust\r0.88\r0.80\r0.94\r\r21\r\\(\\frac{2}{3}\\)\r100\rStan\r1.00\r0.96\r1.00\r\r22\r\\(\\frac{2}{3}\\)\r200\rDip Test\r0.68\r0.58\r0.77\r\r23\r\\(\\frac{2}{3}\\)\r200\rMclust\r1.00\r0.96\r1.00\r\r24\r\\(\\frac{2}{3}\\)\r200\rStan\r1.00\r0.96\r1.00\r\r25\r\\(\\frac{2}{3}\\)\r300\rDip Test\r0.90\r0.82\r0.95\r\r26\r\\(\\frac{2}{3}\\)\r300\rMclust\r1.00\r0.96\r1.00\r\r27\r\\(\\frac{2}{3}\\)\r300\rStan\r1.00\r0.96\r1.00\r\r28\r\\(\\frac{5}{6}\\)\r100\rDip Test\r0.92\r0.85\r0.96\r\r29\r\\(\\frac{5}{6}\\)\r100\rMclust\r1.00\r0.96\r1.00\r\r30\r\\(\\frac{5}{6}\\)\r100\rStan\r1.00\r0.96\r1.00\r\r31\r\\(\\frac{5}{6}\\)\r200\rDip Test\r0.99\r0.95\r1.00\r\r32\r\\(\\frac{5}{6}\\)\r200\rMclust\r1.00\r0.96\r1.00\r\r33\r\\(\\frac{5}{6}\\)\r200\rStan\r1.00\r0.96\r1.00\r\r34\r\\(\\frac{5}{6}\\)\r300\rDip Test\r0.99\r0.95\r1.00\r\r35\r\\(\\frac{5}{6}\\)\r300\rMclust\r1.00\r0.96\r1.00\r\r36\r\\(\\frac{5}{6}\\)\r300\rStan\r1.00\r0.96\r1.00\r\r37\r1\r100\rStan\r0.57\r0.47\r0.67\r\r38\r1\r200\rStan\r0.63\r0.53\r0.72\r\r39\r1\r300\rStan\r0.58\r0.48\r0.68\r\r\r\r\r\r\rConclusion\rThe pairing behavior of tetraploid species was discussed in this thesis\rand we described a way to directly estimate levels preferential pairing\rat individual loci using genotype data derived from NGS data. From the\rsimulation study, we demonstrated that our model can estimate the\rpreferential pairing parameter \\(\\gamma_{jk}\\) accurately and distinguish\rbetween the three different pairing behaviors: autopolyploidy,\rintermediate, and allopolyploidy. After deriving \\(\\hat\\gamma_j\\) from\rMLE, we distinguish the ploidy type via model-based clustering. When the\rgiven data are from autopolyploids, our Stan method exhibits great\rperformance, and when the sample size is large enough, the accuracy is\rhigh. For example, when the given data are from autopolyploids and\rsample size is 300, the accuracy is 97%. When the given data are from\rintermediate polyploids, through our Stan method, the highest accuracy\ris 100%. However, when the given data are from allopolyploids, MLE\rtheory breaks down here, since the true value of \\(\\gamma\\) is 1, but\r\\(\\gamma \\in [0,1]\\), which means that the estimate is on boundary. We\rwill have more future work on this. Additionally, we also compared the\rStan approach to that of Mclust and dip test to distinguish the ploidy\rtype. These two methods can only distinguish whether the given data are\rfrom autopolyploidy. Compared with Stan method, the accuracy of dip test\rand Mclust is lower in most cases.\nHowever, there are still a few weaknesses with our methods. By only\rexploring tetraploids, we excluded the consideration of higher ploidy\rlevels. To avoid double reduction, the situation where one gamete\rreceives two copies of part of the same parental hom(oe)olog, we only\rallow for bivalent pairing, and exclude quadrivalent pairing, which will\rlead to double reduction in some cases\r(Voorrips, Gort, and Vosman 2011; Bourke et al. 2017; Zheng et al. 2016).\nAdditionally, there are some statistical and computational limitations.\rFor example, the number of iterations for simulation is relatively\rsmall, since we limited the number of simulation iterations for\rcomputational reasons. Additionally, as we mentioned above, MLE breaks\rdown at the boundary, which leads to poor behavior when the given data\rare from allopolyploids. For future work, we will do more research to\rfigure out the boundary issue\r(Marchand and Strawderman 2004; Zwiernik 2015).\n\rReference\rBlischak, Paul D, Laura S Kubatko, and Andrea D Wolfe. 2018. “SNP Genotyping and Parameter Estimation in Polyploids Using Low-Coverage Sequencing Data.” Bioinformatics 34 (3): 407–15.\n\rBourke, Peter M., Paul Arens, Roeland E. Voorrips, G. Danny Esselink, Carole F. S. Koning-Boucoiran, Wendy P. C. van’t Westende, Tiago Santos Leonardo, et al. 2017. “Partial Preferential Chromosome Pairing Is Genotype Dependent in Tetraploid Rose.” The Plant Journal 90 (2): 330–43. https://doi.org/10.1111/tpj.13496.\n\rBrent, Richard P. 1973. “Algorithms for Minimization Without Derivatives, Chap. 4.” Prentice-Hall Englewood Cliffs, NJ, USA.\n\rCao, Dachuang, Thomas C Osborn, and Rebecca W Doerge. 2004. “Correct Estimation of Preferential Chromosome Pairing in Autotetraploids.” Genome Research 14 (3): 459–62.\n\rCasella, G., and R. L. Berger. 2002. Statistical Inference. Duxbury Advanced Series in Statistics and Decision Sciences. Thomson Learning. https://books.google.com/books?id=0x\\_vAAAAMAAJ.\n\rClark, Lindsay V, Alexander E Lipka, and Erik J Sacks. 2019. “PolyRAD: Genotype Calling with Uncertainty from Sequencing Data in Polyploids and Diploids.” G3: Genes, Genomes, Genetics 9 (3): 663–73.\n\rCoward, Jermaine, and Angus Harding. 2014. “Size Does Matter: Why Polyploid Tumor Cells Are Critical Drug Targets in the War on Cancer.” Frontiers in Oncology 4: 123.\n\rGerard, David, and Luís Felipe Ventorim Ferrão. 2019. “Priors for genotyping polyploids.” Bioinformatics 36 (6): 1795–1800. https://doi.org/10.1093/bioinformatics/btz852.\n\rGerard, David, Luís Felipe Ventorim Ferrão, Antonio Augusto Franco Garcia, and Matthew Stephens. 2018. “Genotyping Polyploids from Messy Sequencing Data.” Genetics 210 (3): 789–807. https://doi.org/10.1534/genetics.118.301468.\n\rHartigan, John A, Pamela M Hartigan, and others. 1985. “The Dip Test of Unimodality.” The Annals of Statistics 13 (1): 70–84.\n\rHilu, K. W. 1993. “Polyploidy and the Evolution of Domesticated Plants.” American Journal of Botany 80 (12): 1494–9. http://www.jstor.org/stable/2445679.\n\rJoly, Simon, Julian Starr, Walter Lewis, and Anne Bruneau. 2006. “Polyploid and Hybrid Evolution in Roses East of the Rocky Mountains.” American Journal of Botany 93 (March): 412–25. https://doi.org/10.3732/ajb.93.3.412.\n\rMaechler, Martin. 2016. Diptest: Hartigan’s Dip Test Statistic for Unimodality - Corrected. https://CRAN.R-project.org/package=diptest.\n\rMarchand, Eric, and William E. Strawderman. 2004. “Estimation in Restricted Parameter Spaces: A Review.” Lecture Notes-Monograph Series 45: 21–44. http://www.jstor.org/stable/4356296.\n\rMason, Annaliese S. 2017. Polyploidy and Hybridization for Crop Improvement. CRC Press.\n\rOtto, Sarah P, and Jeannette Whitton. 2000. “Polyploid Incidence and Evolution.” Annual Review of Genetics 34 (1): 401–37.\n\rScrucca, Luca, Michael Fop, T Brendan Murphy, and Adrian E Raftery. 2016. “Mclust 5: Clustering, Classification and Density Estimation Using Gaussian Finite Mixture Models.” The R Journal 8 (1): 289.\n\rStan Development Team. 2018. “Stan Modeling Language Users Guide and Reference Manual, Version 2.18.0.” http://mc-stan.org/.\n\r———. 2020. “RStan: The R Interface to Stan.” http://mc-stan.org/.\n\rSybenga, J. 1994. “Preferential Pairing Estimates from Multivalent Frequencies in Tetraploids.” Genome 37 (6): 1045–55. https://doi.org/10.1139/g94-149.\n\rVoorrips, Roeland E, Gerrit Gort, and Ben Vosman. 2011. “Genotype Calling in Tetraploid Species from Bi-Allelic Marker Data Using Mixture Models.” BMC Bioinformatics 12 (1): 172.\n\rVoorrips, Roeland, and Chris Maliepaard. 2012. “The Simulation of Meiosis in Diploid and Tetraploid Organisms Using Various Genetic Models.” BMC Bioinformatics 13 (September): 248. https://doi.org/10.1186/1471-2105-13-248.\n\rWendel, Jonathan F. 2000. “Genome Evolution in Polyploids.” In Plant Molecular Evolution, 225–49. Springer.\n\rWu, Rongling, Maria Gallo-Meagher, Ramon C Littell, and Zhao-Bang Zeng. 2001. “A General Polyploid Model for Analyzing Gene Segregation in Outcrossing Tetraploid Species.” Genetics 159 (2): 869–82.\n\rZheng, Chaozhi, Roeland E Voorrips, Johannes Jansen, Christine A Hackett, Julie Ho, and Marco CAM Bink. 2016. “Probabilistic Multilocus Haplotype Reconstruction in Outcrossing Tetraploids.” Genetics 203 (1): 119–31.\n\rZwiernik, P. 2015. Semialgebraic Statistics and Latent Tree Models. Chapman \u0026amp; Hall/Crc Monographs on Statistics \u0026amp; Applied Probability. CRC Press. https://books.google.com/books?id=YdWYCgAAQBAJ.\n\r\r\r","date":1594987200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597528849,"objectID":"2890ea9ae574fb86af4ca8ccec61697f","permalink":"/talk/est/","publishdate":"2020-07-17T12:00:00Z","relpermalink":"/talk/est/","section":"talk","summary":"Polyploids (organisms with more than two copies of each chromosome) exhibit more complicated meiotic behavior compared to diploids. In diploids, two homologous chromosomes pair and separate during meiosis. However, multiple pairing configurations between chromosomes are possible in polyploids. This pairing behavior characterizes import classes of polyploids. With the growth of next-generation sequencing (NGS), non-model organisms are being studied and their meiotic behavior is of interest. However, no method currently exists to estimate interpretable parameters that characterize the degree and strength of preferential pairing during meiosis directly from genotypes, which are typical outputs of NGS data. In this thesis, we describe a way to directly estimate levels preferential pairing at individual loci using genotype data derived from NGS data. However, data from one locus are not able to identify interpretable parameters of interest. Thus, we provide a way to combine information between loci using a novel model-based clustering approach to obtain parameter estimates that are interpretable for the scientific community. We evaluate our methods on simulated data.","tags":["Academic","Statistics"],"title":"Estimating Preferential Pairing in Polyploids","type":"talk"},{"authors":[],"categories":[],"content":"                                        ","date":1594987200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594987200,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2020-07-17T12:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An summary of Estimating Preferential Pairing in Polyploids.","tags":[],"title":"Slides","type":"slides"}]